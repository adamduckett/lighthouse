/*------------------------------------*\
    $LiGHTHOUSE
\*------------------------------------*/
/**
 * CONTENTS..............You're reading it, sucka!
 * INTRO.................A pretentious paragraph about 'the idea' of LiGHTHOUSE.
 * VARIABLES.............Your settings.
 * FUNCTIONS.............Functions used to build the scale.
 * BASELINE-GUIDES.......Our baseline grid helper overlay.
 * MODULAR SCALE.........Setup our modular scale for setting type.
 * VERTICAL RHYTHM.......Maintain consistent vertical spacing.
 * MEASURE...............Keep line length at an optimum character length.
 * FONT-FEATURES.........Activate super cool features of OpenType fonts.
 */





/*------------------------------------*\
    $INTRO
\*------------------------------------*/
/**
 * In the dark times of bad web typography LiGHTHOUSE is a beacon of light or
 * rum-fueled sailors/front-end developers on a quest for beautiful typography,
 * consistent vertical rhythm and topless mermaids.
 *
 * DISCLAIMER: Due to accusations of poor working conditions the aforementioned
 * 'topless mermaids' have been removed from this version of LiGHTHOUSE :(
 */





/*------------------------------------*\
    $TOGGLE-ALL-THE-THINGS!
\*------------------------------------*/
/**
 * Because I'm awesome, LiGHTHOUSE lets you toggle on/off each module
 * independently so you can easily cook up a custom flavour to suit your own
 * project's needs :)
 */
$lh-use-baseline-guides:       false; // [ true / false ]
$lh-use-modular-scale:         true;  // [ true / false ]
$lh-use-vertical-rhythm:       true;  // [ true / false ]
$lh-use-measure:               true;  // [ true / false ]
$lh-use-font-features:         true;  // [ true / false ]





/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * Config
 *
 * Define our base `font-size` and `line-height`.
 */
$lh-font-size:                 100 !default;  // a `%` value
$lh-line-height:               1.5 !default;  // a unitless value


/**
 * Modular Scale Ratios
 *
 * Our modular scale ratio variables. You should never have to edit or override
 * these :)
 */
$lh-golden:                    1.618034;
$lh-double-octav:              4;
$lh-major-twelfth:             3;
$lh-major-eleventh:            2.666666667;
$lh-major-tenth:               2.5;
$lh-octave:                    2;
$lh-major-seventh:             1.875;
$lh-minor-seventh:             1.777777778;
$lh-major-sixth:               1.666666667;
$lh-minor-sixth:               1.6;
$lh-fifth:                     1.5;
$lh-augmented-fourth:          1.41421;
$lh-fourth:                    1.333333333;
$lh-major-third:               1.25;
$lh-minor-third:               1.2;
$lh-major-second:              1.125;
$lh-minor-second:              1.066666667;

/* This one you CAN edit to reflect your preferred modular scale. */
$lh-ratio:                     $lh-minor-third !default;


/**
 * Baseline & Guides
 *
 * Edit the colour of the baseline guide if you like. You won't hurt my feelings
 * or anything... much :(
 */
$lh-baseline-color:            rgba(56,255,255,.8) !default;





/*------------------------------------*\
    $CALCULATIONS
\*------------------------------------*/
$lh-base: 16 * ($lh-font-size / 100); /* Would equal '16' by default





/*------------------------------------*\
    $FUNCTIONS
\*------------------------------------*/
/**
 * Round up px values
 */
@function scale-round-px($result) {
  @if unit($result) == 'px' {
    @return round($result);
  }
  @return $result;
}

/**
 * Remove the unit of a length
 */
@function strip-unit($num) {
  @if type-of($num) == 'number' and not unitless($num) {
    @return $num / ($num * 0 + 1);
  }

  @return $num;
}

/**
 * Calculate our `base` to the power of our `exponent`
 */
@function scale-pow($base, $exp) {
  $unit: $base * 0 + 1;
  $base: $base/$unit;
  $value: 1;

  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $base;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $base;
    }
  }

  @return $value * $unit;
}





/*------------------------------------*\
    $BASELINE-GUIDES
\*------------------------------------*/
/**
 * Generate a baseline grid to aid in DEVELOPMENT only. Thanks to Mike Morrison
 * at Soholaunch.com for the idea behind this!
 */
$lh-baseline: round($lh-base * $lh-line-height);
$lh-baseline-rem: $lh-baseline / $lh-base;

@if $lh-use-baseline-guides {

  body {
    background-image: -webkit-linear-gradient(
      top,
      rgba(0,0,0,0) 95%,
      $lh-baseline-color 100%
    );
  	background-image: -moz-linear-gradient(
      top,
      rgba(0,0,0,0) 95%,
      $lh-baseline-color 100%
    );
  	background-image: -o-linear-gradient(
      top,
      rgba(0,0,0,0) 95%,
      $lh-baseline-color 100%
    );
  	background-size: 100% #{$lh-baseline-rem + 'rem'};
  }
  html:active body {
    background-image: none;
  }

}





/*------------------------------------*\
    $MODULAR-SCALE
\*------------------------------------*/

/**
 * Our font-size function using modular scale
 */
@function scale($value: 0, $base: $lh-base, $ratio: $lh-ratio) {
  @return scale-round-px(scale-pow($ratio, $value) * $base) / $lh-base;
}

/**
 * Our line-height function using modular scale
 * 1. Calculate our modular scale font-size
 * 2. The height of our baseline
 * 3. The number of whole lines our type spans
 * 4. Return a line-height value that vertically centers our type across
 *    however many whole lines it spans
 */
@function lines($value: 0, $base: $lh-base, $ratio: $lh-ratio) {
  $font-size: scale-round-px(scale-pow($ratio, $value) * $base);  /* [1] */
  $line: $lh-baseline;                                            /* [2] */
  $lines: ceil($font-size / $line);                               /* [3] */

  @return (ceil($lines) * $line) / $font-size;                    /* [4] */
}

/**
 * Create our modular scale mixin which sets both `font-size` and `line-height'.
 */
@mixin modular-scale($value) {
  font-size: #{scale($value) + 'rem'};
  line-height: lines($value);
}

/**
 * Apply our modular scale (if toggled `on`)
 */
$lh-modular-scale:  $lh-font-size;

@if $lh-use-modular-scale {

  /**
   * HTML
   */
  html {
    font-size: #{$lh-font-size + '%'};
  }

  /**
   * Headings
   */
  h1 { @include modular-scale(5);  }
  h2 { @include modular-scale(4);  }
  h3 { @include modular-scale(3);  }
  h4 { @include modular-scale(2);  }
  h5 { @include modular-scale(1); }

  /**
   * Paragraphs
   */
  p {
    @include modular-scale(0);
  }

}





/*------------------------------------*\
    $VERTICAL-RHYTHM
\*------------------------------------*/
@if $lh-use-vertical-rhythm {

  /**
   * A quick reset before we get started.
   */
  body,
  h1, h2, h3, h4, h5, h6,
  p, blockquote, pre,
  dl, dd, ol, ul,
  form, fieldset, legend,
  table, th, td, caption,
  hr {
    margin: 0;
    padding: 0;
  }

  /**
   * Give all elements a bottom margin equal to our baseline.
   */
  h1, h2, h3, h4, h5, h6, hgroup,
  ul, ol, dl,
  blockquote, p, address,
  table,
  fieldset, figure,
  pre {
    margin-bottom: #{$lh-baseline-rem + 'rem'};
  }

}





/*------------------------------------*\
    $MEASURE
\*------------------------------------*/
/**
 * Set our typography measure to keep line length to an optimum character
 * length.
 */
$lh-measure: #{((strip-unit($lh-base) * 30)) / $lh-base + 'rem'};

/**
 * Create a mixin to apply our measure to any element we want, yo!
 */
@mixin measure() {
  max-width: $lh-measure;
  margin-left: auto;
  margin-right: auto;
}

@if $lh-use-measure {

  /**
   * Apply our calculated measure by including our mixin.
   */
  body {
    @include measure;
  }

}





/*------------------------------------*\
    $FONT-FEATURES
\*------------------------------------*/
@if $lh-use-font-features {

  /**
   * Ligatures, old style numbers, swashes and kerning for OpenType
   * fonts.
   *
   * I've set LiGHTHOUSE to target only heading and paragraph tags by default
   * but feel free to widen the scope by editing the selector below :)
   */
  h1, h2, h3 ,h4 ,h5,
  p {
    -webkit-font-feature-settings: "liga", "onum", "swsh" 1, "kern";
       -moz-font-feature-settings: "liga", "onum", "swsh" 1, "kern";
        -ms-font-feature-settings: "liga", "onum", "swsh" 1, "kern";
         -o-font-feature-settings: "liga", "onum", "swsh" 1, "kern";
            font-feature-settings: "liga", "onum", "swsh" 1, "kern";
  }

  /**
   * Small caps for OpenType fonts.
   *
   * Use this class to arbitrarily apply small caps to any element. This can be
   * particularly effective when used for sub-headings.
   */
  .small-caps {
    -webkit-font-feature-settings: "smcp";
       -moz-font-feature-settings: "smcp";
        -ms-font-feature-settings: "smcp";
         -o-font-feature-settings: "smcp";
            font-feature-settings: "smcp";
  }

  /**
   * Stylesets 01-20 for OpenType fonts
   *
   * These classes will activate the relevant styleset for your OpenType font.
   * Admittedly this probably isn't the best way of going about this but fuck
   * it! :D
   */
  .styleset--1 {
    -webkit-font-feature-settings: "ss01" 1;
       -moz-font-feature-settings: "ss01" 1;
        -ms-font-feature-settings: "ss01" 1;
         -o-font-feature-settings: "ss01" 1;
            font-feature-settings: "ss01" 1;
  }
  .styleset--2 {
    -webkit-font-feature-settings: "ss02" 1;
       -moz-font-feature-settings: "ss02" 1;
        -ms-font-feature-settings: "ss02" 1;
         -o-font-feature-settings: "ss02" 1;
            font-feature-settings: "ss02" 1;
  }
  .styleset--3 {
    -webkit-font-feature-settings: "ss03" 1;
       -moz-font-feature-settings: "ss03" 1;
        -ms-font-feature-settings: "ss03" 1;
         -o-font-feature-settings: "ss03" 1;
            font-feature-settings: "ss03" 1;
  }
  .styleset--4 {
    -webkit-font-feature-settings: "ss04" 1;
       -moz-font-feature-settings: "ss04" 1;
        -ms-font-feature-settings: "ss04" 1;
         -o-font-feature-settings: "ss04" 1;
            font-feature-settings: "ss04" 1;
  }
  .styleset--5 {
    -webkit-font-feature-settings: "ss05" 1;
       -moz-font-feature-settings: "ss05" 1;
        -ms-font-feature-settings: "ss05" 1;
         -o-font-feature-settings: "ss05" 1;
            font-feature-settings: "ss05" 1;
  }
  .styleset--6 {
    -webkit-font-feature-settings: "ss06" 1;
       -moz-font-feature-settings: "ss06" 1;
        -ms-font-feature-settings: "ss06" 1;
         -o-font-feature-settings: "ss06" 1;
            font-feature-settings: "ss06" 1;
  }
  .styleset--7 {
    -webkit-font-feature-settings: "ss07" 1;
       -moz-font-feature-settings: "ss07" 1;
        -ms-font-feature-settings: "ss07" 1;
         -o-font-feature-settings: "ss07" 1;
            font-feature-settings: "ss07" 1;
  }
  .styleset--8 {
    -webkit-font-feature-settings: "ss08" 1;
       -moz-font-feature-settings: "ss08" 1;
        -ms-font-feature-settings: "ss08" 1;
         -o-font-feature-settings: "ss08" 1;
            font-feature-settings: "ss08" 1;
  }
  .styleset--9 {
    -webkit-font-feature-settings: "ss09" 1;
       -moz-font-feature-settings: "ss09" 1;
        -ms-font-feature-settings: "ss09" 1;
         -o-font-feature-settings: "ss09" 1;
            font-feature-settings: "ss09" 1;
  }
  .styleset--10 {
    -webkit-font-feature-settings: "ss10" 1;
       -moz-font-feature-settings: "ss10" 1;
        -ms-font-feature-settings: "ss10" 1;
         -o-font-feature-settings: "ss10" 1;
            font-feature-settings: "ss10" 1;
  }
  .styleset--11 {
    -webkit-font-feature-settings: "ss11" 1;
       -moz-font-feature-settings: "ss11" 1;
        -ms-font-feature-settings: "ss11" 1;
         -o-font-feature-settings: "ss11" 1;
            font-feature-settings: "ss11" 1;
  }
  .styleset--12 {
    -webkit-font-feature-settings: "ss12" 1;
       -moz-font-feature-settings: "ss12" 1;
        -ms-font-feature-settings: "ss12" 1;
         -o-font-feature-settings: "ss12" 1;
            font-feature-settings: "ss12" 1;
  }
  .styleset--13 {
    -webkit-font-feature-settings: "ss13" 1;
       -moz-font-feature-settings: "ss13" 1;
        -ms-font-feature-settings: "ss13" 1;
         -o-font-feature-settings: "ss13" 1;
            font-feature-settings: "ss13" 1;
  }
  .styleset--14 {
    -webkit-font-feature-settings: "ss14" 1;
       -moz-font-feature-settings: "ss14" 1;
        -ms-font-feature-settings: "ss14" 1;
         -o-font-feature-settings: "ss14" 1;
            font-feature-settings: "ss14" 1;
  }
  .styleset--15 {
    -webkit-font-feature-settings: "ss15" 1;
       -moz-font-feature-settings: "ss15" 1;
        -ms-font-feature-settings: "ss15" 1;
         -o-font-feature-settings: "ss15" 1;
            font-feature-settings: "ss15" 1;
  }
  .styleset--16 {
    -webkit-font-feature-settings: "ss16" 1;
       -moz-font-feature-settings: "ss16" 1;
        -ms-font-feature-settings: "ss16" 1;
         -o-font-feature-settings: "ss16" 1;
            font-feature-settings: "ss16" 1;
  }
  .styleset--17 {
    -webkit-font-feature-settings: "ss17" 1;
       -moz-font-feature-settings: "ss17" 1;
        -ms-font-feature-settings: "ss17" 1;
         -o-font-feature-settings: "ss17" 1;
            font-feature-settings: "ss17" 1;
  }
  .styleset--18 {
    -webkit-font-feature-settings: "ss18" 1;
       -moz-font-feature-settings: "ss18" 1;
        -ms-font-feature-settings: "ss18" 1;
         -o-font-feature-settings: "ss18" 1;
            font-feature-settings: "ss18" 1;
  }
  .styleset--19 {
    -webkit-font-feature-settings: "ss19" 1;
       -moz-font-feature-settings: "ss19" 1;
        -ms-font-feature-settings: "ss19" 1;
         -o-font-feature-settings: "ss19" 1;
            font-feature-settings: "ss19" 1;
  }
  .styleset--20 {
    -webkit-font-feature-settings: "ss20" 1;
       -moz-font-feature-settings: "ss20" 1;
        -ms-font-feature-settings: "ss20" 1;
         -o-font-feature-settings: "ss20" 1;
            font-feature-settings: "ss20" 1;
  }

}
